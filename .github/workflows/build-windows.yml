# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build Windows

on:
  push:
  #    branches: [ "main" ]
  workflow_dispatch:


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Run Cmake
        shell: bash
        # Build your program with the given configuration
        run: cmake . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=/usr

      - name: Build
        shell: bash
        run: cmake --build . --config ${{env.BUILD_TYPE}}


      - name: Test
        run: dir
#      - name: Prepare + Archive AppImage
#        run: |
#          ./appimage-builder --recipe AppImageBuilder.yml --skip-test
#          mkdir deploy
#          mkdir MuffinMare
#          cp *.AppImage MuffinMare
#          cp -r assets MuffinMare/assets
#          tar -czf deploy/MuffinMare.tar.gz MuffinMare
#
#      - name: Upload artifact
#        uses: SamKirkland/FTP-Deploy-Action@4.2.0
#        with:
#          server: ${{ secrets.ftp_server }}
#          username: ${{ secrets.ftp_user }}
#          password: ${{ secrets.ftp_password }}
#          local-dir: ./deploy/
#          server-dir: ./muffins-test/

